<%# vim:set filetype=dts: %>
/*
╭──────────────────────────────────────────────────────────╮
│ Definitions                                              │
│ Override any definitions here by uncommenting and        │
│ defining your own values.                                │
╰──────────────────────────────────────────────────────────╯
*/

/*
┌                                                          ┐
│                      Home Row Mods                       │
└                                                          ┘
*/

// Glove80 key positions index for positional hold-tap
// - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248
// - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png
//
// |------------------------|------------------------|
// | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |
// |                        |                        |
// |  0  1  2  3  4         |          5  6  7  8  9 |
// | 10 11 12 13 14 15      |      16 17 18 19 20 21 |
// | 22 23 24 25 26 27      |      28 29 30 31 32 33 |
// | 34 35 36 37 38 39      |      40 41 42 43 44 45 |
// | 46 47 48 49 50 51      |      58 59 60 61 62 63 |
// | 64 65 66 67 68         |         75 76 77 78 79 |
// |                69 52   |   57 74                |
// |                 70 53  |  56 73                 |
// |                  71 54 | 55 72                  |
// |------------------------|------------------------|

#define LEFT_HAND_KEYS      \
        0  1  2  3  4         \
       10 11 12 13 14 15      \
       22 23 24 25 26 27      \
       34 35 36 37 38 39      \
       46 47 48 49 50 51      \
       64 65 66 67 68

#define RIGHT_HAND_KEYS     \
                                         5  6  7  8  9 \
                                     16 17 18 19 20 21 \
                                     28 29 30 31 32 33 \
                                     40 41 42 43 44 45 \
                                     58 59 60 61 62 63 \
                                        75 76 77 78 79

#define THUMB_KEYS          \
                      69 52       57 74                \
                       70 53     56 73                 \
                        71 54   55 72

// HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
// for the pinky, ring, and middle fingers (which are assigned to Super,
// Alt, and Ctrl respectively in the Miryoku system) on home row keys.

// #define HOMEY_HOLDING_TYPE "tap-preferred"


// HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)
// home row mod keys in order to send their modifiers to the computer
// (i.e. "register" them) for mod-click mouse usage (e.g. Ctrl-Click).

// #define HOMEY_HOLDING_TIME 270 // TAPPING_TERM + ALLOW_CROSSOVER_AFTER


// HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)
// after typing before you can use home row mods again.  It prevents
// unintended activation of home row mods when you're actively typing.

// #define HOMEY_STREAK_DECAY 170 // global-quick-tap-ms


// HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.

// #define HOMEY_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat


// SHIFT_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
// for index fingers (which Miryoku assigns to Shift) on home row keys.
//
// NOTE: The "tap-preferred" flavor of ZMK hold-tap for index finger keys
// allows faster activation of the Shift modifier (without having to wait
// for the modified key to be released as the "balanced" flavor requires).
// Typing streaks and the `hold-trigger-on-release` setting are disabled
// for the index fingers so as not to hinder their speed and dexterity.

// #define SHIFT_HOLDING_TYPE "tap-preferred"


// SHIFT_HOLDING_TIME defines how long you need to hold (milliseconds)
// index finger keys in order to send their modifiers to the computer
// (i.e. "register" them) for mod-click mouse usage (e.g. Shift-Click).
//
// CAUTION: You'll need to perform inward rolls from pinky->ring->middle
// fingers toward the index fingers when activating multiple modifiers
// because `hold-trigger-on-release` is disabled for the index fingers.
// Otherwise, you may be surprised that the index fingers' modifier is
// sent immediately without the rest of your multi-mod chord when you
// perform outward rolls from your index fingers toward your pinkies.

// #define SHIFT_HOLDING_TIME 170


// SHIFT_STREAK_DECAY defines how long you need to wait (milliseconds)
// after typing before you can use home row mods again. It prevents
// unintended activation of home row mods when you're actively typing.

// #define SHIFT_STREAK_DECAY 70 // global-quick-tap-ms


// SHIFT_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.

// #define SHIFT_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat

/*
┌                                                          ┐
│             Miryoku Layers (Thumb Clusters)              │
└                                                          ┘
*/

// THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
// for the thumbs (which are assigned to 6 layers in the Miryoku system).
//
// NOTE: The "balanced" flavor of ZMK hold-tap provides instant modifier
// activation for the symbol layer (if the tapped symbol key is released
// while the thumb layer key is still held down) for quicker programming.

// #define THUMB_HOLDING_TYPE "balanced"


// THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)
// a thumb key to activate a layer.  Shorter holds are treated as taps.

// #define THUMB_HOLDING_TIME 200


// THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.

// #define THUMB_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat


// SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)
// the space thumb key to activate.  Shorter holds are treated as taps.

// #define SPACE_HOLDING_TIME 170


// SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.

// #define SPACE_REPEAT_DECAY 200 // "tap then hold" for key auto-repeat

/*
┌                                                          ┐
│                      Cursor Macros                       │
└                                                          ┘
*/

// SELECT_WORD_DELAY defines how long the macro waits (milliseconds)
// after moving the cursor before it selects a word.  A larger delay
// may allow the macro to move to the next word upon each invocation.

// #define SELECT_WORD_DELAY 1

/*
┌                                                          ┐
│                       Emoji Macros                       │
└                                                          ┘
*/

// UNICODE_TAP_DELAY defines how long the macro waits (milliseconds)
// between keystrokes while inputting the Unicode codepoint shortcut.

// #define UNICODE_TAP_DELAY 1
